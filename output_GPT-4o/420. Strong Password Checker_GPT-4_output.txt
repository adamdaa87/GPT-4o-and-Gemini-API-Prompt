class Solution:
    def strongPasswordChecker(self, password: str) -> int:
        missing_lower = missing_upper = missing_digit = 1
        
        for c in password:
            if c.islower():
                missing_lower = 0
            elif c.isupper():
                missing_upper = 0
            elif c.isdigit():
                missing_digit = 0

        categories_missing = missing_lower + missing_upper + missing_digit

        change = 0
        one_repeat = two_repeat = 0
        i = 2
        
        while i < len(password):
            if password[i] == password[i-1] == password[i-2]:
                length = 2

                while i < len(password) and password[i] == password[i-1]:
                    length += 1
                    i += 1

                change += length // 3
                
                if length % 3 == 0:
                    one_repeat += 1
                elif length % 3 == 1:
                    two_repeat += 1

            else:
                i += 1

        if len(password) < 6:
            return max(categories_missing, 6 - len(password))
        elif len(password) <= 20:
            return max(categories_missing, change)
        else:
            delete = len(password) - 20
            
            change -= min(delete, one_repeat * 1) // 1
            change -= min(max(delete - one_repeat, 0), two_repeat * 2) // 2
            change -= max(delete - one_repeat - 2 * two_repeat, 0) // 3
            
            return delete + max(categories_missing, change)