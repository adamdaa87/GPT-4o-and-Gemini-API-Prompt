You are given a 2D integer array rectangles where rectangles[i] = [l_i, h_i] indicates that ith rectangle has a length of l_i and a height of h_i. You are also given a 2D integer array points where points[j] = [x_j, y_j] is a point with coordinates (x_j, y_j).

The ith rectangle has its bottom-left corner point at the coordinates (0, 0) and its top-right corner point at (l_i, h_i).

Return an integer array count of length points.length where count[j] is the number of rectangles that contain the jth point.

The ith rectangle contains the jth point if 0 <= x_j <= l_i and 0 <= y_j <= h_i. Note that points that lie on the edges of a rectangle are also considered to be contained by that rectangle.

Constraints:

1 <= rectangles.length, points.length <= 5 * 10^4
rectangles[i].length == points[j].length == 2
1 <= l_i, x_j <= 10^9
1 <= h_i, y_j <= 100
All the rectangles are unique.
All the points are unique.

Start the Python code with:
class Solution:
    def countRectangles(self, rectangles: List[List[int]], points: List[List[int]]) -> List[int]: