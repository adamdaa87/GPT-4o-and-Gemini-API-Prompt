class Solution:
    def minimumSubstringsInPartition(self, s: str) -> int:
        count = {}  # Keep track of character counts
        partitions = 0
        substring_start = 0

        for i, char in enumerate(s):
            count[char] = count.get(char, 0) + 1  

            # Check if we have a balanced substring
            is_balanced = True
            for char_count in count.values():
                if char_count % 2 != 0:
                    is_balanced = False
                    break

            if is_balanced:
                partitions += 1
                count = {}  # Reset the count for the next substring
                substring_start = i + 1

        return partitions